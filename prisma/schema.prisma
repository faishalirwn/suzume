// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Artist {
    id        String   @id @default(cuid())
    name      String   @unique
    bio       String?
    cover     String
    songs     Song[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
model Song {
    id        String   @id @default(cuid())
    title     String
    cover     String
    altTitle  String?
    album     String?
    language  Language
    videoLink String?
    lyrics    Lyric[]
    artist    Artist  @relation(fields: [artistId], references: [id])
    artistId  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
model Lyric {
    id        String   @id @default(cuid())
    content   String
    song      Song    @relation(fields: [songId], references: [id])
    songId    String
    language  Language
    timestamp String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([songId, language])
}

enum Language {
    ab
    aa
    af
    ak
    sq
    am
    ar
    an
    hy
    as
    av
    ae
    ay
    az
    bm
    ba
    eu
    be
    bn
    bi
    bs
    br
    bg
    my
    ca
    ch
    ce
    ny
    zh
    cu
    cv
    kw
    co
    cr
    hr
    cs
    da
    dv
    nl
    dz
    en
    eo
    et
    ee
    fo
    fj
    fi
    fr
    fy
    ff
    gd
    gl
    lg
    ka
    de
    el
    kl
    gn
    gu
    ht
    ha
    he
    hz
    hi
    ho
    hu
    is
    io
    ig
    id
    ia
    ie
    iu
    ik
    ga
    it
    ja
    jv
    kn
    kr
    ks
    kk
    km
    ki
    rw
    ky
    kv
    kg
    ko
    kj
    ku
    lo
    la
    lv
    li
    ln
    lt
    lu
    lb
    mk
    mg
    ms
    ml
    mt
    gv
    mi
    mr
    mh
    mn
    na
    nv
    nd
    nr
    ng
    ne
    no
    nb
    nn
    ii
    oc
    oj
    or
    om
    os
    pi
    ps
    fa
    pl
    pt
    pa
    qu
    ro
    rm
    rn
    ru
    se
    sm
    sg
    sa
    sc
    sr
    sn
    sd
    si
    sk
    sl
    so
    st
    es
    su
    sw
    ss
    sv
    tl
    ty
    tg
    ta
    tt
    te
    th
    bo
    ti
    to
    ts
    tn
    tr
    tra
    tk
    tw
    ug
    uk
    ur
    uz
    ve
    vi
    vo
    wa
    cy
    wo
    xh
    yi
    yo
    za
    zu
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
